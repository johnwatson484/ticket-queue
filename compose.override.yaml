services:
  ticket-queue:
    build:
      target: development
    image: ticket-queue-development
    container_name: ticket-queue-development
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - ./src:/home/node/src
      - ./package.json:/home/node/package.json
    networks:
      - ticket-queue
    depends_on:
      redis:
        condition: service_started
      mongodb:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongodb:27017/ticket-queue
      REDIS_URI: redis://redis:6379
      SESSION_PASSWORD: ${SESSION_PASSWORD:-this-secret-needs-to-be-at-least-32-characters-long}

  redis:
    image: redis
    ports:
      - "6379:6379"
    command: redis-server --dir /data --save 5 1
    volumes:
      - redis-data:/data
    networks:
      - ticket-queue

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data
    networks:
      - ticket-queue
    command: --replSet rs0 --bind_ip_all --port 27017
    healthcheck:
      test: test $$(mongosh --port 27017 --quiet --eval "try {rs.initiate({_id:'rs0',members:[{_id:0,host:\"mongodb:27017\"}]})} catch(e) {rs.status().ok}") -eq 1
      interval: 10s
      start_period: 10s

networks:
  ticket-queue:
    driver: bridge
    name: ticket-queue

volumes:
  redis-data:
  mongodb-data:
